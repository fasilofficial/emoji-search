{"version":3,"sources":["Header.js","SearchInput.js","EmojiResultRow.js","EmojiResults.js","filterEmoji.js","App.js","index.js"],"names":["Header","className","src","width","height","alt","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiResultsRow","codePointHex","symbol","codePointAt","toString","data-clipboard-text","title","EmojiResults","clipboard","Clipboard","destroy","emojiData","map","key","filterEmoji","searchText","maxResults","emojiList","filter","emoji","toLowerCase","includes","keywords","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","ReactDOM","render","document","getElementById"],"mappings":"qwsKAGqBA,G,MAAM,kHAmBxB,OAnBwB,mCACzB,WACE,OACE,4BAAQC,UAAU,oBAChB,yBACEC,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,KACJ,eAEF,yBACEH,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,UAIX,EAnBwB,CAASC,kBCEfC,G,MAAW,iKAO5B,OAP4B,oCAK9BC,aAAe,SAAAC,GACb,EAAKC,MAAMC,WAAWF,IACvB,EAUA,OAVA,mCAED,WACE,OACE,yBAAKR,UAAU,0BACb,6BACE,2BAAOW,SAAUC,KAAKL,qBAI7B,EAjB6B,CAASF,kB,gBCDpBQ,G,MAAe,kHAmBjC,OAnBiC,mCAMlC,WACE,IAAMC,EAAeF,KAAKH,MAAMM,OAAOC,YAAY,GAAGC,SAAS,IACzDhB,EAAG,iDAA6Ca,EAAY,QAClE,OACE,yBACEd,UAAU,+CACVkB,sBAAqBN,KAAKH,MAAMM,QAEhC,yBAAKX,IAAKQ,KAAKH,MAAMU,MAAOlB,IAAKA,IACjC,0BAAMD,UAAU,SAASY,KAAKH,MAAMU,OACpC,0BAAMnB,UAAU,QAAM,4BAG3B,EAnBiC,CAASK,kBCGxBe,G,MAAY,kHAyB9B,OAzB8B,8CAK/B,WACER,KAAKS,UAAY,IAAIC,IAAU,wBAChC,kCAED,WACEV,KAAKS,UAAUE,YAChB,oBAED,WACE,OACE,yBAAKvB,UAAU,2BACZY,KAAKH,MAAMe,UAAUC,KAAI,SAAAD,GAAS,OACjC,kBAAC,EAAc,CACbE,IAAKF,EAAUL,MACfJ,OAAQS,EAAUT,OAClBI,MAAOK,EAAUL,gBAK1B,EAzB8B,CAASd,kB,OCL3B,SAASsB,EAAYC,EAAYC,GAC9C,OAAOC,EACJC,QAAO,SAAAC,GACN,QAAIA,EAAMb,MAAMc,cAAcC,SAASN,EAAWK,kBAG9CD,EAAMG,SAASD,SAASN,MAK7BQ,MAAM,EAAGP,GCT0B,IAEnBQ,EAAG,kDACtB,WAAY5B,GAAQ,IAAD,EAIf,OAJe,qBACjB,cAAMA,IAMR6B,mBAAqB,SAAA9B,GACnB,EAAK+B,SAAS,CACZC,cAAeb,EAAYnB,EAAMiC,OAAOC,MAAO,OAPjD,EAAKC,MAAQ,CACXH,cAAeb,EAAY,GAAI,KAC/B,EAiBH,OAhBA,mCAQD,WACE,OACE,6BACE,kBAAC,EAAM,MACP,kBAAC,EAAW,CAACjB,WAAYE,KAAK0B,qBAC9B,kBAAC,EAAY,CAACd,UAAWZ,KAAK+B,MAAMH,qBAGzC,EAtBqB,CAASnC,iB,YCAjCuC,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,W","file":"static/js/main.29762620.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport \"./Header.css\";\n\nexport default class Header extends PureComponent {\n  render() {\n    return (\n      <header className=\"component-header\">\n        <img\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f638.png\"\n          width=\"32\"\n          height=\"32\"\n          alt=\"\"\n        />\n        Emoji Search\n        <img\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f63a.png\"\n          width=\"32\"\n          height=\"32\"\n          alt=\"\"\n        />\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./SearchInput.css\";\n\nexport default class SearchInput extends PureComponent {\n  static propTypes = {\n    textChange: PropTypes.func\n  };\n\n  handleChange = event => {\n    this.props.textChange(event);\n  };\n\n  render() {\n    return (\n      <div className=\"component-search-input\">\n        <div>\n          <input onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EmojiResultRow.css\";\n\nexport default class EmojiResultsRow extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    symbol: PropTypes.string\n  };\n\n  render() {\n    const codePointHex = this.props.symbol.codePointAt(0).toString(16);\n    const src = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`;\n    return (\n      <div\n        className=\"component-emoji-result-row copy-to-clipboard\"\n        data-clipboard-text={this.props.symbol}\n      >\n        <img alt={this.props.title} src={src} />\n        <span className=\"title\">{this.props.title}</span>\n        <span className=\"info\">Click to copy emoji</span>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Clipboard from \"clipboard\";\n\nimport EmojiResultRow from \"./EmojiResultRow\";\nimport \"./EmojiResults.css\";\n\nexport default class EmojiResults extends PureComponent {\n  static propTypes = {\n    emojiData: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  render() {\n    return (\n      <div className=\"component-emoji-results\">\n        {this.props.emojiData.map(emojiData => (\n          <EmojiResultRow\n            key={emojiData.title}\n            symbol={emojiData.symbol}\n            title={emojiData.title}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import emojiList from \"./emojiList.json\";\n\nexport default function filterEmoji(searchText, maxResults) {\n  return emojiList\n    .filter(emoji => {\n      if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      if (emoji.keywords.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"./Header\";\nimport SearchInput from \"./SearchInput\";\nimport EmojiResults from \"./EmojiResults\";\nimport filterEmoji from \"./filterEmoji\";\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\", 20)\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value, 20)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResults emojiData={this.state.filteredEmoji} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}